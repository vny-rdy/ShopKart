{"ast":null,"code":"const handleCart = (state = [], action) => {\n  // Default state is an empty array\n  const product = action.payload;\n  let updatedCart;\n  switch (action.type) {\n    case 'ADDITEM':\n      const exist = state.find(x => x.id === product.id);\n      if (exist) {\n        // Increase the quantity\n        updatedCart = state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty + 1\n        } : x);\n      } else {\n        updatedCart = [...state, {\n          ...product,\n          qty: 1\n        }];\n      }\n      // Update localStorage\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n      return updatedCart;\n    case 'DELITEM':\n      const exist2 = state.find(x => x.id === product.id);\n      if (exist2.qty === 1) {\n        updatedCart = state.filter(x => x.id !== exist2.id);\n      } else {\n        updatedCart = state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n      // Update localStorage\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n      return updatedCart;\n    default:\n      return state;\n  }\n};\nexport default handleCart;","map":{"version":3,"names":["handleCart","state","action","product","payload","updatedCart","type","exist","find","x","id","map","qty","localStorage","setItem","JSON","stringify","exist2","filter"],"sources":["/Users/vny/Desktop/Desktop/shop-kart/src/redux/reducer/handleCart.js"],"sourcesContent":["const handleCart = (state = [], action) => {  // Default state is an empty array\n  const product = action.payload;\n  let updatedCart;\n\n  switch (action.type) {\n    case 'ADDITEM':\n      const exist = state.find((x) => x.id === product.id);\n      if (exist) {\n        // Increase the quantity\n        updatedCart = state.map((x) =>\n          x.id === product.id ? { ...x, qty: x.qty + 1 } : x\n        );\n      } else {\n        updatedCart = [...state, { ...product, qty: 1 }];\n      }\n      // Update localStorage\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n      return updatedCart;\n\n    case 'DELITEM':\n      const exist2 = state.find((x) => x.id === product.id);\n      if (exist2.qty === 1) {\n        updatedCart = state.filter((x) => x.id !== exist2.id);\n      } else {\n        updatedCart = state.map((x) =>\n          x.id === product.id ? { ...x, qty: x.qty - 1 } : x\n        );\n      }\n      // Update localStorage\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n      return updatedCart;\n\n    default:\n      return state;\n  }\n};\n\nexport default handleCart;\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGA,CAACC,KAAK,GAAG,EAAE,EAAEC,MAAM,KAAK;EAAG;EAC5C,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;EAC9B,IAAIC,WAAW;EAEf,QAAQH,MAAM,CAACI,IAAI;IACjB,KAAK,SAAS;MACZ,MAAMC,KAAK,GAAGN,KAAK,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKP,OAAO,CAACO,EAAE,CAAC;MACpD,IAAIH,KAAK,EAAE;QACT;QACAF,WAAW,GAAGJ,KAAK,CAACU,GAAG,CAAEF,CAAC,IACxBA,CAAC,CAACC,EAAE,KAAKP,OAAO,CAACO,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAG;QAAE,CAAC,GAAGH,CACnD,CAAC;MACH,CAAC,MAAM;QACLJ,WAAW,GAAG,CAAC,GAAGJ,KAAK,EAAE;UAAE,GAAGE,OAAO;UAAES,GAAG,EAAE;QAAE,CAAC,CAAC;MAClD;MACA;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACX,WAAW,CAAC,CAAC;MACzD,OAAOA,WAAW;IAEpB,KAAK,SAAS;MACZ,MAAMY,MAAM,GAAGhB,KAAK,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKP,OAAO,CAACO,EAAE,CAAC;MACrD,IAAIO,MAAM,CAACL,GAAG,KAAK,CAAC,EAAE;QACpBP,WAAW,GAAGJ,KAAK,CAACiB,MAAM,CAAET,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKO,MAAM,CAACP,EAAE,CAAC;MACvD,CAAC,MAAM;QACLL,WAAW,GAAGJ,KAAK,CAACU,GAAG,CAAEF,CAAC,IACxBA,CAAC,CAACC,EAAE,KAAKP,OAAO,CAACO,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAG;QAAE,CAAC,GAAGH,CACnD,CAAC;MACH;MACA;MACAI,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACX,WAAW,CAAC,CAAC;MACzD,OAAOA,WAAW;IAEpB;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}